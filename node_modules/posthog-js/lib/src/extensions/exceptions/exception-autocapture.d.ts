import { PostHog } from '../../posthog-core';
import { DecideResponse, Properties } from '../../types';
import { ErrorEventArgs } from './error-conversion';
export declare class ExceptionObserver {
    instance: PostHog;
    remoteEnabled: boolean | undefined;
    private originalOnErrorHandler;
    private originalOnUnhandledRejectionHandler;
    private errorsToIgnore;
    constructor(instance: PostHog);
    private debugLog;
    startCapturing(): void;
    stopCapturing(): void;
    isCapturing(): boolean;
    isEnabled(): boolean;
    afterDecideResponse(response: DecideResponse): void;
    captureException(args: ErrorEventArgs, properties?: Properties): void;
    /**
     * :TRICKY: Make sure we batch these requests
     */
    sendExceptionEvent(properties: {
        [key: string]: any;
    }): void;
}
