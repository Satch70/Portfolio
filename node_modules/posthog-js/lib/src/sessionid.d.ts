import { PostHogPersistence } from './posthog-persistence';
import { PostHogConfig, SessionIdChangedCallback } from './types';
export declare class SessionIdManager {
    private config;
    private persistence;
    private _windowId;
    private _sessionId;
    private _window_id_storage_key;
    private _primary_window_exists_storage_key;
    private _sessionStartTimestamp;
    private _sessionActivityTimestamp;
    private _sessionTimeoutMs;
    private _sessionIdChangedHandlers;
    constructor(config: Partial<PostHogConfig>, persistence: PostHogPersistence);
    onSessionId(callback: SessionIdChangedCallback): () => void;
    private _canUseSessionStorage;
    private _setWindowId;
    private _getWindowId;
    private _setSessionId;
    private _getSessionId;
    resetSessionId(): void;
    private _listenToReloadWindow;
    checkAndGetSessionAndWindowId(readOnly?: boolean, _timestamp?: number | null): {
        sessionId: string;
        windowId: string;
        sessionStartTimestamp: number;
    };
}
